//// [tests/cases/conformance/expressions/typeSatisfaction/typeSatisfaction2.ts] ////

=== typeSatisfaction2.ts ===
export type T1 = () => void;
>T1 : T1
>   : ^^

export type T2 = (a: number, b: number) => number;
>T2 : T2
>   : ^^
>a : number
>  : ^^^^^^
>b : number
>  : ^^^^^^

export function f1() { } satisfies () => void;
>f1 : () => void
>   : ^^^^^^^^^^

export function f2() { } satisfies () => number;
>f2 : () => void
>   : ^^^^^^^^^^

export function f3() { } satisfies T1;
>f3 : () => void
>   : ^^^^^^^^^^

export function f4(a: number, b: number) {
>f4 : (a: number, b: number) => number
>   : ^^^^      ^^^^^      ^^^^^^^^^^^
>a : number
>  : ^^^^^^
>b : number
>  : ^^^^^^

    return 1;
>1 : 1
>  : ^

} satisfies (a: number, b: number) => number;
>a : number
>  : ^^^^^^
>b : number
>  : ^^^^^^

export function f5(a: number, b: number) {
>f5 : (a: number, b: number) => number
>   : ^^^^      ^^^^^      ^^^^^^^^^^^
>a : number
>  : ^^^^^^
>b : number
>  : ^^^^^^

    return 1;
>1 : 1
>  : ^

} satisfies T2;

export function f6(a: boolean, b: boolean) {
>f6 : (a: boolean, b: boolean) => number
>   : ^^^^       ^^^^^       ^^^^^^^^^^^
>a : boolean
>  : ^^^^^^^
>b : boolean
>  : ^^^^^^^

    return 1;
>1 : 1
>  : ^

} satisfies (a: number, b: number) => number;
>a : number
>  : ^^^^^^
>b : number
>  : ^^^^^^

export function f7(a: number, b: boolean) {
>f7 : (a: number, b: boolean) => number
>   : ^^^^      ^^^^^       ^^^^^^^^^^^
>a : number
>  : ^^^^^^
>b : boolean
>  : ^^^^^^^

    return 1;
>1 : 1
>  : ^

} satisfies T2;

export function f8(a: number, b: number) {
>f8 : (a: number, b: number) => string
>   : ^^^^      ^^^^^      ^^^^^^^^^^^
>a : number
>  : ^^^^^^
>b : number
>  : ^^^^^^

    return "";
>"" : ""
>   : ^^

} satisfies (a: number, b: number) => number;
>a : number
>  : ^^^^^^
>b : number
>  : ^^^^^^

export function f9(a: number, b: number) {
>f9 : (a: number, b: number) => string
>   : ^^^^      ^^^^^      ^^^^^^^^^^^
>a : number
>  : ^^^^^^
>b : number
>  : ^^^^^^

    return "";
>"" : ""
>   : ^^

} satisfies T2;

