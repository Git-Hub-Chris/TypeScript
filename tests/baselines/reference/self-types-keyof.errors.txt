tests/cases/compiler/self-types-keyof.ts(11,5): error TS18051: Type '"b"' can't be used to index type '{ a: number; }'
tests/cases/compiler/self-types-keyof.ts(18,25): error TS18051: Type '"b"' can't be used to index type '{ a: number; }'


==== tests/cases/compiler/self-types-keyof.ts (2 errors) ====
    // Implementing index types without index types
    
    type KeyOf<T> =
      self extends string | number | symbol
        ? T extends { [_ in self]: unknown }
            ? self
            : Never<`Type '${Print<self>}' can't be used to index type '${Print<T>}'`>
        : string | number | symbol
    
    let t0: KeyOf<{ a: number }> = "a"
    let t1: KeyOf<{ a: number }> = "b"
        ~~
!!! error TS18051: Type '"b"' can't be used to index type '{ a: number; }'
    
    declare const get:
      <T, K extends KeyOf<T>>(t: T, k: K) =>
        T extends { [_ in K]: infer X } ? X : never
    
    let t3: number = get({ a: 10 }, "a")
    let t4 = get({ a: 10 }, "b")
                            ~~~
!!! error TS18051: Type '"b"' can't be used to index type '{ a: number; }'
    
    export {}
    