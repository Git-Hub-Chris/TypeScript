=== tests/cases/compiler/arrayCopyWithin.ts ===
var strTuple: ["foo", "bar", "baz"];
>strTuple : Symbol(strTuple, Decl(arrayCopyWithin.ts, 0, 3))

strTuple.copyWithin(0, 0); // Type should be ("foo" | "bar" | "baz")[] instead of ["foo", "bar", "baz"]
>strTuple.copyWithin : Symbol(Array.copyWithin, Decl(lib.es2015.core.d.ts, --, --))
>strTuple : Symbol(strTuple, Decl(arrayCopyWithin.ts, 0, 3))
>copyWithin : Symbol(Array.copyWithin, Decl(lib.es2015.core.d.ts, --, --))

var numTuple: [11, 2, 22, 1];
>numTuple : Symbol(numTuple, Decl(arrayCopyWithin.ts, 3, 3))

numTuple.copyWithin(0, 0); // Type should be (11 | 2 | 22 | 1)[] instead of [11, 2, 22, 1]
>numTuple.copyWithin : Symbol(Array.copyWithin, Decl(lib.es2015.core.d.ts, --, --))
>numTuple : Symbol(numTuple, Decl(arrayCopyWithin.ts, 3, 3))
>copyWithin : Symbol(Array.copyWithin, Decl(lib.es2015.core.d.ts, --, --))

interface Int8ArrayExtension extends Int8Array {}
>Int8ArrayExtension : Symbol(Int8ArrayExtension, Decl(arrayCopyWithin.ts, 4, 26))
>Int8Array : Symbol(Int8Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2016.array.include.d.ts, --, --) ... and 2 more)

var int8Array: Int8ArrayExtension;
>int8Array : Symbol(int8Array, Decl(arrayCopyWithin.ts, 7, 3))
>Int8ArrayExtension : Symbol(Int8ArrayExtension, Decl(arrayCopyWithin.ts, 4, 26))

int8Array.copyWithin(0, 0); // Int8Array
>int8Array.copyWithin : Symbol(Int8Array.copyWithin, Decl(lib.es5.d.ts, --, --))
>int8Array : Symbol(int8Array, Decl(arrayCopyWithin.ts, 7, 3))
>copyWithin : Symbol(Int8Array.copyWithin, Decl(lib.es5.d.ts, --, --))

interface Uint8ArrayExtension extends Uint8Array {}
>Uint8ArrayExtension : Symbol(Uint8ArrayExtension, Decl(arrayCopyWithin.ts, 8, 27))
>Uint8Array : Symbol(Uint8Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2016.array.include.d.ts, --, --) ... and 2 more)

var uint8Array: Uint8ArrayExtension;
>uint8Array : Symbol(uint8Array, Decl(arrayCopyWithin.ts, 11, 3))
>Uint8ArrayExtension : Symbol(Uint8ArrayExtension, Decl(arrayCopyWithin.ts, 8, 27))

uint8Array.copyWithin(0, 0); // Uint8Array
>uint8Array.copyWithin : Symbol(Uint8Array.copyWithin, Decl(lib.es5.d.ts, --, --))
>uint8Array : Symbol(uint8Array, Decl(arrayCopyWithin.ts, 11, 3))
>copyWithin : Symbol(Uint8Array.copyWithin, Decl(lib.es5.d.ts, --, --))

interface Uint8ClampedArrayExtension extends Uint8ClampedArray {}
>Uint8ClampedArrayExtension : Symbol(Uint8ClampedArrayExtension, Decl(arrayCopyWithin.ts, 12, 28))
>Uint8ClampedArray : Symbol(Uint8ClampedArray, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2016.array.include.d.ts, --, --) ... and 2 more)

var uint8ClampedArray: Uint8ClampedArrayExtension;
>uint8ClampedArray : Symbol(uint8ClampedArray, Decl(arrayCopyWithin.ts, 15, 3))
>Uint8ClampedArrayExtension : Symbol(Uint8ClampedArrayExtension, Decl(arrayCopyWithin.ts, 12, 28))

uint8ClampedArray.copyWithin(0, 0); // Uint8ClampedArray
>uint8ClampedArray.copyWithin : Symbol(Uint8ClampedArray.copyWithin, Decl(lib.es5.d.ts, --, --))
>uint8ClampedArray : Symbol(uint8ClampedArray, Decl(arrayCopyWithin.ts, 15, 3))
>copyWithin : Symbol(Uint8ClampedArray.copyWithin, Decl(lib.es5.d.ts, --, --))

interface Int16ArrayExtension extends Int16Array {}
>Int16ArrayExtension : Symbol(Int16ArrayExtension, Decl(arrayCopyWithin.ts, 16, 35))
>Int16Array : Symbol(Int16Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2016.array.include.d.ts, --, --) ... and 2 more)

var int16Array: Int16ArrayExtension;
>int16Array : Symbol(int16Array, Decl(arrayCopyWithin.ts, 19, 3))
>Int16ArrayExtension : Symbol(Int16ArrayExtension, Decl(arrayCopyWithin.ts, 16, 35))

int16Array.copyWithin(0, 0); // Int16Array
>int16Array.copyWithin : Symbol(Int16Array.copyWithin, Decl(lib.es5.d.ts, --, --))
>int16Array : Symbol(int16Array, Decl(arrayCopyWithin.ts, 19, 3))
>copyWithin : Symbol(Int16Array.copyWithin, Decl(lib.es5.d.ts, --, --))

interface Uint16ArrayExtension extends Uint16Array {}
>Uint16ArrayExtension : Symbol(Uint16ArrayExtension, Decl(arrayCopyWithin.ts, 20, 28))
>Uint16Array : Symbol(Uint16Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2016.array.include.d.ts, --, --) ... and 2 more)

var uint16Array: Uint16ArrayExtension;
>uint16Array : Symbol(uint16Array, Decl(arrayCopyWithin.ts, 23, 3))
>Uint16ArrayExtension : Symbol(Uint16ArrayExtension, Decl(arrayCopyWithin.ts, 20, 28))

uint16Array.copyWithin(0, 0); // Uint16Array
>uint16Array.copyWithin : Symbol(Uint16Array.copyWithin, Decl(lib.es5.d.ts, --, --))
>uint16Array : Symbol(uint16Array, Decl(arrayCopyWithin.ts, 23, 3))
>copyWithin : Symbol(Uint16Array.copyWithin, Decl(lib.es5.d.ts, --, --))

interface Int32ArrayExtension extends Int32Array {}
>Int32ArrayExtension : Symbol(Int32ArrayExtension, Decl(arrayCopyWithin.ts, 24, 29))
>Int32Array : Symbol(Int32Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2016.array.include.d.ts, --, --) ... and 2 more)

var int32Array: Int32ArrayExtension;
>int32Array : Symbol(int32Array, Decl(arrayCopyWithin.ts, 27, 3))
>Int32ArrayExtension : Symbol(Int32ArrayExtension, Decl(arrayCopyWithin.ts, 24, 29))

int32Array.copyWithin(0, 0); // Int32Array
>int32Array.copyWithin : Symbol(Int32Array.copyWithin, Decl(lib.es5.d.ts, --, --))
>int32Array : Symbol(int32Array, Decl(arrayCopyWithin.ts, 27, 3))
>copyWithin : Symbol(Int32Array.copyWithin, Decl(lib.es5.d.ts, --, --))

interface Uint32ArrayExtension extends Uint32Array {}
>Uint32ArrayExtension : Symbol(Uint32ArrayExtension, Decl(arrayCopyWithin.ts, 28, 28))
>Uint32Array : Symbol(Uint32Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2016.array.include.d.ts, --, --) ... and 2 more)

var uint32Array: Uint32ArrayExtension;
>uint32Array : Symbol(uint32Array, Decl(arrayCopyWithin.ts, 31, 3))
>Uint32ArrayExtension : Symbol(Uint32ArrayExtension, Decl(arrayCopyWithin.ts, 28, 28))

uint32Array.copyWithin(0, 0); // Uint32Array
>uint32Array.copyWithin : Symbol(Uint32Array.copyWithin, Decl(lib.es5.d.ts, --, --))
>uint32Array : Symbol(uint32Array, Decl(arrayCopyWithin.ts, 31, 3))
>copyWithin : Symbol(Uint32Array.copyWithin, Decl(lib.es5.d.ts, --, --))

interface Float32ArrayExtension extends Float32Array {}
>Float32ArrayExtension : Symbol(Float32ArrayExtension, Decl(arrayCopyWithin.ts, 32, 29))
>Float32Array : Symbol(Float32Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2016.array.include.d.ts, --, --) ... and 2 more)

var float32Array: Float32ArrayExtension;
>float32Array : Symbol(float32Array, Decl(arrayCopyWithin.ts, 35, 3))
>Float32ArrayExtension : Symbol(Float32ArrayExtension, Decl(arrayCopyWithin.ts, 32, 29))

float32Array.copyWithin(0, 0); // Float32Array
>float32Array.copyWithin : Symbol(Float32Array.copyWithin, Decl(lib.es5.d.ts, --, --))
>float32Array : Symbol(float32Array, Decl(arrayCopyWithin.ts, 35, 3))
>copyWithin : Symbol(Float32Array.copyWithin, Decl(lib.es5.d.ts, --, --))

interface Float64ArrayExtension extends Float64Array {}
>Float64ArrayExtension : Symbol(Float64ArrayExtension, Decl(arrayCopyWithin.ts, 36, 30))
>Float64Array : Symbol(Float64Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2016.array.include.d.ts, --, --) ... and 2 more)

var float64Array: Float64ArrayExtension;
>float64Array : Symbol(float64Array, Decl(arrayCopyWithin.ts, 39, 3))
>Float64ArrayExtension : Symbol(Float64ArrayExtension, Decl(arrayCopyWithin.ts, 36, 30))

float64Array.copyWithin(0, 0); // Float64Array
>float64Array.copyWithin : Symbol(Float64Array.copyWithin, Decl(lib.es5.d.ts, --, --))
>float64Array : Symbol(float64Array, Decl(arrayCopyWithin.ts, 39, 3))
>copyWithin : Symbol(Float64Array.copyWithin, Decl(lib.es5.d.ts, --, --))

interface BigInt64ArrayExtension extends BigInt64Array {}
>BigInt64ArrayExtension : Symbol(BigInt64ArrayExtension, Decl(arrayCopyWithin.ts, 40, 30))
>BigInt64Array : Symbol(BigInt64Array, Decl(lib.es2020.bigint.d.ts, --, --), Decl(lib.es2020.bigint.d.ts, --, --), Decl(lib.es2022.array.d.ts, --, --), Decl(lib.es2023.array.d.ts, --, --))

var bigInt64Array: BigInt64ArrayExtension;
>bigInt64Array : Symbol(bigInt64Array, Decl(arrayCopyWithin.ts, 43, 3))
>BigInt64ArrayExtension : Symbol(BigInt64ArrayExtension, Decl(arrayCopyWithin.ts, 40, 30))

bigInt64Array.copyWithin(0, 0); // BigInt64Array
>bigInt64Array.copyWithin : Symbol(BigInt64Array.copyWithin, Decl(lib.es2020.bigint.d.ts, --, --))
>bigInt64Array : Symbol(bigInt64Array, Decl(arrayCopyWithin.ts, 43, 3))
>copyWithin : Symbol(BigInt64Array.copyWithin, Decl(lib.es2020.bigint.d.ts, --, --))

interface BigUint64ArrayExtension extends BigUint64Array {}
>BigUint64ArrayExtension : Symbol(BigUint64ArrayExtension, Decl(arrayCopyWithin.ts, 44, 31))
>BigUint64Array : Symbol(BigUint64Array, Decl(lib.es2020.bigint.d.ts, --, --), Decl(lib.es2020.bigint.d.ts, --, --), Decl(lib.es2022.array.d.ts, --, --), Decl(lib.es2023.array.d.ts, --, --))

var bigUint64Array: BigUint64ArrayExtension;
>bigUint64Array : Symbol(bigUint64Array, Decl(arrayCopyWithin.ts, 47, 3))
>BigUint64ArrayExtension : Symbol(BigUint64ArrayExtension, Decl(arrayCopyWithin.ts, 44, 31))

bigUint64Array.copyWithin(0, 0); // BigUint64Array
>bigUint64Array.copyWithin : Symbol(BigUint64Array.copyWithin, Decl(lib.es2020.bigint.d.ts, --, --))
>bigUint64Array : Symbol(bigUint64Array, Decl(arrayCopyWithin.ts, 47, 3))
>copyWithin : Symbol(BigUint64Array.copyWithin, Decl(lib.es2020.bigint.d.ts, --, --))

