=== tests/cases/conformance/types/inlineTypeAliases/inlineTypeAliasNoSpuriousCircularityError.ts ===
type Something<T> = type Q = T extends number ? {x: Q} : never;
>Something : Symbol(Something, Decl(inlineTypeAliasNoSpuriousCircularityError.ts, 0, 0))
>T : Symbol(T, Decl(inlineTypeAliasNoSpuriousCircularityError.ts, 0, 15))
>Q : Symbol(Q, Decl(inlineTypeAliasNoSpuriousCircularityError.ts, 0, 19))
>T : Symbol(T, Decl(inlineTypeAliasNoSpuriousCircularityError.ts, 0, 15))
>x : Symbol(x, Decl(inlineTypeAliasNoSpuriousCircularityError.ts, 0, 49))
>Q : Symbol(Q, Decl(inlineTypeAliasNoSpuriousCircularityError.ts, 0, 19))

type Foo = Something<number>;
>Foo : Symbol(Foo, Decl(inlineTypeAliasNoSpuriousCircularityError.ts, 0, 63))
>Something : Symbol(Something, Decl(inlineTypeAliasNoSpuriousCircularityError.ts, 0, 0))

