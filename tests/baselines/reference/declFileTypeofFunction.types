=== tests/cases/compiler/declFileTypeofFunction.ts ===
function f(n: typeof f): string;
>f : type Anon = { (n: Anon): string; (n: type Anon_1 = { (n: Anon_1): number; (n: Anon): number; }): string; }
>n : type Anon = { (n: Anon): string; (n: type Anon_1 = { (n: Anon_1): number; (n: Anon): number; }): string; }
>f : type Anon = { (n: Anon): string; (n: type Anon_1 = { (n: Anon_1): number; (n: Anon): number; }): string; }

function f(n: typeof g): string;
>f : type Anon = { (n: Anon): string; (n: type Anon_1 = { (n: Anon_1): number; (n: Anon): number; }): string; }
>n : type Anon = { (n: Anon): number; (n: type Anon_1 = { (n: Anon_1): string; (n: Anon): string; }): number; }
>g : type Anon = { (n: Anon): number; (n: type Anon_1 = { (n: Anon_1): string; (n: Anon): string; }): number; }

function f() { return undefined; }
>f : type Anon = { (n: Anon): string; (n: type Anon_1 = { (n: Anon_1): number; (n: Anon): number; }): string; }
>undefined : undefined

function g(n: typeof g): number;
>g : type Anon = { (n: Anon): number; (n: type Anon_1 = { (n: Anon_1): string; (n: Anon): string; }): number; }
>n : type Anon = { (n: Anon): number; (n: type Anon_1 = { (n: Anon_1): string; (n: Anon): string; }): number; }
>g : type Anon = { (n: Anon): number; (n: type Anon_1 = { (n: Anon_1): string; (n: Anon): string; }): number; }

function g(n: typeof f): number;
>g : type Anon = { (n: Anon): number; (n: type Anon_1 = { (n: Anon_1): string; (n: Anon): string; }): number; }
>n : type Anon = { (n: Anon): string; (n: type Anon_1 = { (n: Anon_1): number; (n: Anon): number; }): string; }
>f : type Anon = { (n: Anon): string; (n: type Anon_1 = { (n: Anon_1): number; (n: Anon): number; }): string; }

function g() { return undefined; }
>g : type Anon = { (n: Anon): number; (n: type Anon_1 = { (n: Anon_1): string; (n: Anon): string; }): number; }
>undefined : undefined

var b: () => typeof b;
>b : type Anon = () => Anon
>b : type Anon = () => Anon

function b1() {
>b1 : type Anon = () => Anon

    return b1;
>b1 : type Anon = () => Anon
}

function foo(): typeof foo {
>foo : type Anon = () => Anon
>foo : type Anon = () => Anon

    return null;
>null : null
}
var foo1: typeof foo;
>foo1 : type Anon = () => Anon
>foo : type Anon = () => Anon

var foo2 = foo;
>foo2 : type Anon = () => Anon
>foo : type Anon = () => Anon

var foo3 = function () {
>foo3 : type Anon = () => Anon
>function () {    return foo3;} : type Anon = () => Anon

    return foo3;
>foo3 : type Anon = () => Anon
}
var x = () => {
>x : type Anon = () => Anon
>() => {    return x;} : type Anon = () => Anon

    return x;
>x : type Anon = () => Anon
}

function foo5(x: number) {
>foo5 : (x: number) => (x: number) => number
>x : number

    function bar(x: number) {
>bar : (x: number) => number
>x : number

        return x;
>x : number
    }
    return bar;
>bar : (x: number) => number
}
