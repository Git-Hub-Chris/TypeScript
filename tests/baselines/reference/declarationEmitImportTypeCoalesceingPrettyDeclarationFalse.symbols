=== tests/cases/compiler/whole.d.ts ===
declare namespace thing {
>thing : Symbol(thing, Decl(whole.d.ts, 0, 0))

    export const a = 1;
>a : Symbol(a, Decl(whole.d.ts, 1, 16))

    export interface A {}
>A : Symbol(A, Decl(whole.d.ts, 1, 23))

    export function getNs(): typeof thing;
>getNs : Symbol(getNs, Decl(whole.d.ts, 2, 25))
>thing : Symbol(thing, Decl(whole.d.ts, 0, 0))
}
export = thing;
>thing : Symbol(thing, Decl(whole.d.ts, 0, 0))

=== tests/cases/compiler/types.d.ts ===
export interface A {}
>A : Symbol(A, Decl(types.d.ts, 0, 0))

export interface B {}
>B : Symbol(B, Decl(types.d.ts, 0, 21))

export interface C {}
>C : Symbol(C, Decl(types.d.ts, 1, 21))

export declare function getA(): A;
>getA : Symbol(getA, Decl(types.d.ts, 2, 21))
>A : Symbol(A, Decl(types.d.ts, 0, 0))

export declare function getB(): B;
>getB : Symbol(getB, Decl(types.d.ts, 4, 34))
>B : Symbol(B, Decl(types.d.ts, 0, 21))

export declare function getC(): C;
>getC : Symbol(getC, Decl(types.d.ts, 5, 34))
>C : Symbol(C, Decl(types.d.ts, 1, 21))

=== tests/cases/compiler/index.ts ===
import { getA } from "./types";
>getA : Symbol(getA, Decl(index.ts, 0, 8))

import { getNs } from "./whole";
>getNs : Symbol(getNs, Decl(index.ts, 1, 8))

export const a1 = getA();
>a1 : Symbol(a1, Decl(index.ts, 3, 12))
>getA : Symbol(getA, Decl(index.ts, 0, 8))

export const a2 = [getA()];
>a2 : Symbol(a2, Decl(index.ts, 4, 12))
>getA : Symbol(getA, Decl(index.ts, 0, 8))

export const a3 = { a: getA() };
>a3 : Symbol(a3, Decl(index.ts, 5, 12))
>a : Symbol(a, Decl(index.ts, 5, 19))
>getA : Symbol(getA, Decl(index.ts, 0, 8))

export const ns1 = getNs();
>ns1 : Symbol(ns1, Decl(index.ts, 7, 12))
>getNs : Symbol(getNs, Decl(index.ts, 1, 8))

export const ns2 = [getNs()];
>ns2 : Symbol(ns2, Decl(index.ts, 8, 12))
>getNs : Symbol(getNs, Decl(index.ts, 1, 8))

export const ns3 = { a: getNs() };
>ns3 : Symbol(ns3, Decl(index.ts, 9, 12))
>a : Symbol(a, Decl(index.ts, 9, 20))
>getNs : Symbol(getNs, Decl(index.ts, 1, 8))

