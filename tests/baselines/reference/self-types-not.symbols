=== tests/cases/compiler/self-types-not.ts ===
type Not<T> =
>Not : Symbol(Not, Decl(self-types-not.ts, 0, 0))
>T : Symbol(T, Decl(self-types-not.ts, 0, 9))

  self extends T
>T : Symbol(T, Decl(self-types-not.ts, 0, 9))

    ? Never<`Type '${Print<self>}' is not assignable to type 'Not<${Print<T>}>'`>
>Never : Symbol(Never, Decl(lib.es5.d.ts, --, --))
>Print : Symbol(Print, Decl(lib.es5.d.ts, --, --))
>Print : Symbol(Print, Decl(lib.es5.d.ts, --, --))
>T : Symbol(T, Decl(self-types-not.ts, 0, 9))

    : self

const divide = (a: number, b: number & Not<0>) => a / b
>divide : Symbol(divide, Decl(self-types-not.ts, 5, 5))
>a : Symbol(a, Decl(self-types-not.ts, 5, 16))
>b : Symbol(b, Decl(self-types-not.ts, 5, 26))
>Not : Symbol(Not, Decl(self-types-not.ts, 0, 0))
>a : Symbol(a, Decl(self-types-not.ts, 5, 16))
>b : Symbol(b, Decl(self-types-not.ts, 5, 26))

divide(1, 0)
>divide : Symbol(divide, Decl(self-types-not.ts, 5, 5))

divide(1, 1)
>divide : Symbol(divide, Decl(self-types-not.ts, 5, 5))

divide(1, "x")
>divide : Symbol(divide, Decl(self-types-not.ts, 5, 5))

export {}
