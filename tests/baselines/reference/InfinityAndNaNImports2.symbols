=== tests/cases/compiler/foo.ts ===
export type Infinity = 42;
>Infinity : Symbol(Infinity, Decl(foo.ts, 0, 0))

export type NaN = "no";
>NaN : Symbol(NaN, Decl(foo.ts, 0, 26))

export type undefined = true;
>undefined : Symbol(undefined, Decl(foo.ts, 1, 23))

=== tests/cases/compiler/bar.ts ===
import { Infinity, NaN, undefined } from "./foo";
>Infinity : Symbol(Infinity, Decl(bar.ts, 0, 8))
>NaN : Symbol(NaN, Decl(bar.ts, 0, 18))
>undefined : Symbol(undefined, Decl(bar.ts, 0, 23))

import * as foo from "./foo";
>foo : Symbol(foo, Decl(bar.ts, 1, 6))

type t1 = Infinity;
>t1 : Symbol(t1, Decl(bar.ts, 1, 29))

type t2 = NaN;
>t2 : Symbol(t2, Decl(bar.ts, 3, 19))

type t3 = -Infinity;
>t3 : Symbol(t3, Decl(bar.ts, 4, 14))

type t4 = -NaN;
>t4 : Symbol(t4, Decl(bar.ts, 5, 20))

type t5 = undefined;
>t5 : Symbol(t5, Decl(bar.ts, 6, 15))

type t6 = foo.Infinity;
>t6 : Symbol(t6, Decl(bar.ts, 7, 20))
>foo : Symbol(foo, Decl(bar.ts, 1, 6))
>Infinity : Symbol(Infinity, Decl(foo.ts, 0, 0))

type t7 = foo.NaN;
>t7 : Symbol(t7, Decl(bar.ts, 8, 23))
>foo : Symbol(foo, Decl(bar.ts, 1, 6))
>NaN : Symbol(NaN, Decl(foo.ts, 0, 26))

type t8 = foo.undefined;
>t8 : Symbol(t8, Decl(bar.ts, 9, 18))
>foo : Symbol(foo, Decl(bar.ts, 1, 6))
>undefined : Symbol(undefined, Decl(foo.ts, 1, 23))

