capturedLetConstInLoop5_ES6.ts(44,12): error TS2845: This condition will always return 'true'.
capturedLetConstInLoop5_ES6.ts(66,14): error TS2845: This condition will always return 'true'.
capturedLetConstInLoop5_ES6.ts(100,12): error TS2845: This condition will always return 'true'.
capturedLetConstInLoop5_ES6.ts(122,14): error TS2845: This condition will always return 'true'.
capturedLetConstInLoop5_ES6.ts(174,13): error TS2367: This comparison appears to be unintentional because the types '0' and '1' have no overlap.
capturedLetConstInLoop5_ES6.ts(183,12): error TS2845: This condition will always return 'true'.
capturedLetConstInLoop5_ES6.ts(188,13): error TS2845: This condition will always return 'true'.
capturedLetConstInLoop5_ES6.ts(202,13): error TS2845: This condition will always return 'true'.
capturedLetConstInLoop5_ES6.ts(205,14): error TS2845: This condition will always return 'true'.
capturedLetConstInLoop5_ES6.ts(229,13): error TS2367: This comparison appears to be unintentional because the types '0' and '1' have no overlap.
capturedLetConstInLoop5_ES6.ts(239,12): error TS2845: This condition will always return 'true'.
capturedLetConstInLoop5_ES6.ts(244,13): error TS2845: This condition will always return 'true'.
capturedLetConstInLoop5_ES6.ts(258,13): error TS2845: This condition will always return 'true'.
capturedLetConstInLoop5_ES6.ts(261,14): error TS2845: This condition will always return 'true'.
capturedLetConstInLoop5_ES6.ts(273,13): error TS2845: This condition will always return 'true'.


==== capturedLetConstInLoop5_ES6.ts (15 errors) ====
    declare function use(a: any);
    
    //====let
    function foo0(x) {
        for (let x of []) {
            var v = x;
            (function() { return x + v });
            (() => x + v);
            if (x == 1) {
                return;
            }
        }
    
        use(v);
    }
    
    function foo00(x) {
        for (let x in []) {
            var v = x;
            (function() { return x + v });
            (() => x + v);
            if (x == "1") {
                return;
            }
        }
    
        use(v);
    }
    
    function foo1(x) {
        for (let x = 0; x < 1; ++x) {
            var v = x;
            (function() { return x + v });
            (() => x + v);
            if (x == 1) {
                return;
            }
        }
    
        use(v);
    }
    
    function foo2(x) {
        while (1 === 1) {
               ~~~~~~~
!!! error TS2845: This condition will always return 'true'.
            let x = 1;
            var v = x;
            (function() { return x + v });
            (() => x + v);
            if (x == 1) {
                return;
            }
        }
        
        use(v);
    }
    
    function foo3(x) {
        do {
            let x;
            var v;
            (function() { return x + v });
            (() => x + v);
            if (x == 1) {
                return;
            }
        } while (1 === 1)
                 ~~~~~~~
!!! error TS2845: This condition will always return 'true'.
        
        use(v);
    }
    
    function foo4(x) {
        for (let y = 0; y < 1; ++y) {
            var v = y;
            let x = 1;
            (function() { return x + v });
            (() => x + v);
            if (x == 1) {
                return;
            }
        }
        
        use(v);
    }
    
    function foo5(x) {
        for (let x = 0, y = 1; x < 1; ++x) {
            var v = x;
            (function() { return x + y + v });
            (() => x + y + v);
            if (x == 1) {
                return;
            }
        }
        
        use(v);
    }
    
    
    function foo6(x) {
        while (1 === 1) {
               ~~~~~~~
!!! error TS2845: This condition will always return 'true'.
            let x, y;
            var v = x;
            (function() { return x + y + v });
            (() => x + y + v);
            if (x == 1) {
                return;
            }
        };
        
        use(v)
    }
    
    function foo7(x) {
        do {
            let x, y;
            var v = x;
            (function() { return x + y + v });
            (() => x + y + v);
            if (x == 1) {
                return;
            }
        } while (1 === 1);
                 ~~~~~~~
!!! error TS2845: This condition will always return 'true'.
        
        use(v);
    }
    
    
    function foo8(x) {
        for (let y = 0; y < 1; ++y) {
            let x = 1;
            var v = x;
            (function() { return x + y + v });
            (() => x + y + v);
            if (x == 1) {
                return;
            }
        }
        
        use(v);
    }
    
    //====const
    function foo0_c(x) {
        for (const x of []) {
            var v = x;
            (function() { return x + v });
            (() => x + v);
            if (x == 1) {
                return;
            }
        }
    
        use(v);
    }
    
    function foo00_c(x) {
        for (const x in []) {
            var v = x;
            (function() { return x + v });
            (() => x + v);
            if (x == "1") {
                return;
            }
        }
    
        use(v);
    }
    
    function foo1_c(x) {
        for (const x = 0; x < 1;) {
            var v = x;
            (function() { return x + v });
            (() => x + v);
            if (x == 1) {
                ~~~~~~
!!! error TS2367: This comparison appears to be unintentional because the types '0' and '1' have no overlap.
                return;
            }
        }
    
        use(v);
    }
    
    function foo2_c(x) {
        while (1 === 1) {
               ~~~~~~~
!!! error TS2845: This condition will always return 'true'.
            const x = 1;
            var v = x;
            (function() { return x + v });
            (() => x + v);
            if (x == 1) {
                ~~~~~~
!!! error TS2845: This condition will always return 'true'.
                return;
            }
        }
        
        use(v);
    }
    
    function foo3_c(x) {
        do {
            const x = 1;
            var v;
            (function() { return x + v });
            (() => x + v);
            if (x == 1) {
                ~~~~~~
!!! error TS2845: This condition will always return 'true'.
                return;
            }
        } while (1 === 1)
                 ~~~~~~~
!!! error TS2845: This condition will always return 'true'.
        
        use(v);
    }
    
    function foo4_c(x) {
        for (const y = 0; y < 1;) {
            var v = y;
            let x = 1;
            (function() { return x + v });
            (() => x + v);
            if (x == 1) {
                return;
            }
        }
        
        use(v);
    }
    
    function foo5_c(x) {
        for (const x = 0, y = 1; x < 1;) {
            var v = x;
            (function() { return x + y + v });
            (() => x + y + v);
            if (x == 1) {
                ~~~~~~
!!! error TS2367: This comparison appears to be unintentional because the types '0' and '1' have no overlap.
                return;
            }
        }
        
        use(v);
    }
    
    
    function foo6_c(x) {
        while (1 === 1) {
               ~~~~~~~
!!! error TS2845: This condition will always return 'true'.
            const x = 1, y = 1;
            var v = x;
            (function() { return x + y + v });
            (() => x + y + v);
            if (x == 1) {
                ~~~~~~
!!! error TS2845: This condition will always return 'true'.
                return;
            }
        }
        
        use(v)
    }
    
    function foo7_c(x) {
        do {
            const x = 1, y = 1;
            var v = x;
            (function() { return x + y + v });
            (() => x + y + v);
            if (x == 1) {
                ~~~~~~
!!! error TS2845: This condition will always return 'true'.
                return;
            }
        } while (1 === 1)
                 ~~~~~~~
!!! error TS2845: This condition will always return 'true'.
        
        use(v);
    }
    
    
    function foo8_c(x) {
        for (const y = 0; y < 1;) {
            const x = 1;
            var v = x;
            (function() { return x + y + v });
            (() => x + y + v);
            if (x == 1) {
                ~~~~~~
!!! error TS2845: This condition will always return 'true'.
                return;
            }
        }
        
        use(v);
    }