=== tests/cases/compiler/foo.ts ===
export type Foo = 42;
>Foo : Symbol(Foo, Decl(foo.ts, 0, 0), Decl(foo.ts, 4, 12))

export type Bar = "no";
>Bar : Symbol(Bar, Decl(foo.ts, 0, 21), Decl(foo.ts, 5, 12))

export type Baz = true;
>Baz : Symbol(Baz, Decl(foo.ts, 1, 23), Decl(foo.ts, 6, 12))

export const Foo = 42;
>Foo : Symbol(Foo, Decl(foo.ts, 0, 0), Decl(foo.ts, 4, 12))

export const Bar = "no";
>Bar : Symbol(Bar, Decl(foo.ts, 0, 21), Decl(foo.ts, 5, 12))

export const Baz = true;
>Baz : Symbol(Baz, Decl(foo.ts, 1, 23), Decl(foo.ts, 6, 12))

=== tests/cases/compiler/bar.ts ===
import { Foo as Infinity, Bar as NaN, Baz as undefined } from "./foo";
>Foo : Symbol(Infinity, Decl(foo.ts, 0, 0), Decl(foo.ts, 4, 12))
>Infinity : Symbol(Infinity, Decl(bar.ts, 0, 8))
>Bar : Symbol(NaN, Decl(foo.ts, 0, 21), Decl(foo.ts, 5, 12))
>NaN : Symbol(NaN, Decl(bar.ts, 0, 25))
>Baz : Symbol(undefined, Decl(foo.ts, 1, 23), Decl(foo.ts, 6, 12))
>undefined : Symbol(undefined, Decl(bar.ts, 0, 37))

Infinity;
>Infinity : Symbol(Infinity, Decl(bar.ts, 0, 8))

NaN;
>NaN : Symbol(NaN, Decl(bar.ts, 0, 25))

-Infinity;
>Infinity : Symbol(Infinity, Decl(bar.ts, 0, 8))

-NaN;
>NaN : Symbol(NaN, Decl(bar.ts, 0, 25))

undefined;
>undefined : Symbol(undefined, Decl(bar.ts, 0, 37))

type t1 = Infinity;
>t1 : Symbol(t1, Decl(bar.ts, 6, 10))

type t2 = NaN;
>t2 : Symbol(t2, Decl(bar.ts, 7, 19))

type t3 = -Infinity;
>t3 : Symbol(t3, Decl(bar.ts, 8, 14))

type t4 = -NaN;
>t4 : Symbol(t4, Decl(bar.ts, 9, 20))

type t5 = undefined;
>t5 : Symbol(t5, Decl(bar.ts, 10, 15))

