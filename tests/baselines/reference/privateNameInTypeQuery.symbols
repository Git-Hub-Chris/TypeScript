//// [tests/cases/conformance/classes/members/privateNames/privateNameInTypeQuery.ts] ////

=== privateNameInTypeQuery.ts ===
class C {
>C : Symbol(C, Decl(privateNameInTypeQuery.ts, 0, 0))

    a = 'a';
>a : Symbol(C.a, Decl(privateNameInTypeQuery.ts, 0, 9))

    #b = 'b';
>#b : Symbol(C.#b, Decl(privateNameInTypeQuery.ts, 1, 12))

    constructor() {
        const a: typeof this['a'] = 1;
>a : Symbol(a, Decl(privateNameInTypeQuery.ts, 5, 13))
>this : Symbol(C, Decl(privateNameInTypeQuery.ts, 0, 0))

        const b: typeof this['a'] = ''; // ok
>b : Symbol(b, Decl(privateNameInTypeQuery.ts, 6, 13))
>this : Symbol(C, Decl(privateNameInTypeQuery.ts, 0, 0))

        const c: typeof this[#b]  = 1;
>c : Symbol(c, Decl(privateNameInTypeQuery.ts, 8, 13))
>this : Symbol(C, Decl(privateNameInTypeQuery.ts, 0, 0))

        const d: typeof this[#b] = '';  // ok
>d : Symbol(d, Decl(privateNameInTypeQuery.ts, 9, 13))
>this : Symbol(C, Decl(privateNameInTypeQuery.ts, 0, 0))
    }
}

const c = new C();
>c : Symbol(c, Decl(privateNameInTypeQuery.ts, 13, 5))
>C : Symbol(C, Decl(privateNameInTypeQuery.ts, 0, 0))

const a: typeof c['a'] = '';
>a : Symbol(a, Decl(privateNameInTypeQuery.ts, 14, 5))
>c : Symbol(c, Decl(privateNameInTypeQuery.ts, 13, 5))

const b: typeof c[#b]  = '';
>b : Symbol(b, Decl(privateNameInTypeQuery.ts, 15, 5))
>c : Symbol(c, Decl(privateNameInTypeQuery.ts, 13, 5))

